#!/usr/bin/env node

/* eslint-disable */

'use strict';

require('dotenv').load();

var sf = require('jsforce');

// This returns a Promise that resolves when our Contacts
// are deleted, and rejects if the Contacts can't be deleted
function destroyContacts(conn) {
  return new Promise(function(resolve, reject) {
    conn.query('SELECT Id FROM Contact')
      .destroy('Contact', function(err, rets) {
        if (err) {
          console.error(err);
          reject(err);
        }
        else {
          console.log('All Contacts have been deleted.');
          resolve();
        }
      });
  });
}

// This returns a Promise that resolves when our Assets
// are deleted, and rejects if the Assets can't be deleted
function destroyAssets(conn) {
  return new Promise(function(resolve, reject) {
    conn.query('SELECT Id FROM Asset')
      .destroy('Asset', function(err, rets) {
        if (err) {
          console.error(err);
          reject(err);
        }
        else {
          console.log('All Assets have been deleted.');
          resolve();
        }
      });
  });
}

function exitProcess(e) {
  process.exit();
}

function destroy() {
  var creds = {
    user: process.env.SALESFORCE_USER,
    pass: process.env.SALESFORCE_PASSWORD,
    token: process.env.SALESFORCE_TOKEN,
  };

  if (!creds.user || !creds.pass || !creds.token) {
    console.log('You have not set up your Salesforce credentials. Refer to the README for instructions.');
    exitProcess();
  }

  var conn = new sf.Connection();

  conn.login(creds.user, creds.pass + creds.token, function() {
    Promise.all([
      destroyContacts(conn),
      destroyAssets(conn)
    ]).then(exitProcess, function(err) {
      console.error(err);
      exitProcess();
    });
  });
}

console.warn('This will delete ALL of your Contacts and Assets from Salesforce. It cannot be undone. Type \'yes\' to confirm.');

process.stdin.resume();
process.stdin.setEncoding('utf8');

process.stdin.on('data', function(text) {
  if (text === 'yes\n') {
    destroy();
  }
  else {
    process.exit();
  }
});
